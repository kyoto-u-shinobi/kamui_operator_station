#include "ros/ros.h"
#include "sensor_msgs/LaserScan.h"
#include <tf/transform_broadcaster.h>

#define PI 3.14159265358979

int main(int argc, char **argv)
{
	ros::init(argc, argv, "test_node");
	ros::NodeHandle n;

	ros::Publisher pub = n.advertise<sensor_msgs::LaserScan>("scan", 1000);

	ros::Rate loop_rate(40);
	tf::TransformBroadcaster map2laser;

	int count = 0;
	while(ros::ok())
	{
		ros::Time current_time = ros::Time::now();

		double yaw = 0;//count*PI/180.0;

		map2laser.sendTransform(
			tf::StampedTransform( // 引数を５つとる
				tf::Transform(tf::createQuaternionFromRPY(0, 0, yaw), // 回転行列
				tf::Vector3(0, 0, 0)),	// 移動
				current_time,	// タイムスタンプ
				"map",	// リンクの親ノードの名前
				"laser"	// 子ノードの名前
			)
		);

		sensor_msgs::LaserScan scan;
		scan.header.frame_id = "laser";
		scan.header.stamp = current_time;
		scan.ranges.resize(10);
		scan.intensities.resize(10);

		scan.angle_min = 0.0;
		scan.angle_max = 30.0 * PI / 180.0;
		scan.angle_increment = 3.0 * PI / 180.0;

		scan.range_min = 0.05;
		scan.range_max = 4.0;

		for(int i=0; i<10; i++)
		{
			scan.ranges[i] = 4*(0.6 - 0.4*sin(8*count*PI/180.0))*i/10.0;
			scan.intensities[i] = 0;
		}

		pub.publish(scan);

		ros::spinOnce();

		loop_rate.sleep();
		++count;
	}

	return 0;
}
